
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateEventEmitterH.js
 */
#pragma once

#include <react/renderer/components/view/ViewEventEmitter.h>


namespace facebook {
namespace react {
class RNJWPlayerEventEmitter : public ViewEventEmitter {
 public:
  using ViewEventEmitter::ViewEventEmitter;

  struct OnPlayerReady {
      
    };

  struct OnPlaylistPlaylistSources {
      std::string file;
    std::string label;
    bool default;
    };

  struct OnPlaylistPlaylistAdSchedule {
      std::string tag;
    std::string offset;
    };

  struct OnPlaylistPlaylistTracks {
      std::string file;
    std::string label;
    bool default;
    };

  struct OnPlaylistPlaylist {
      std::string file;
    std::vector<OnPlaylistPlaylistSources> sources;
    std::string image;
    std::string title;
    std::string description;
    std::string mediaId;
    std::vector<OnPlaylistPlaylistAdSchedule> adSchedule;
    std::string adVmap;
    std::vector<OnPlaylistPlaylistTracks> tracks;
    std::string recommendations;
    Float startTime;
    bool autostart;
    };

  struct OnPlaylist {
      std::vector<OnPlaylistPlaylist> playlist;
    };

  struct OnBeforePlay {
      
    };

  struct OnBeforeComplete {
      
    };

  struct OnComplete {
      
    };

  struct OnPlay {
      
    };

  struct OnPause {
      
    };

  struct OnSeek {
      Float position;
    Float offset;
    };

  struct OnSeeked {
      Float position;
    };

  struct OnRateChanged {
      Float rate;
    Float at;
    };

  struct OnSetupPlayerError {
      std::string code;
    std::string error;
    };

  struct OnPlayerError {
      std::string code;
    std::string error;
    };

  struct OnPlayerWarning {
      std::string code;
    std::string warning;
    };

  struct OnPlayerAdError {
      std::string code;
    std::string error;
    };

  struct OnPlayerAdWarning {
      std::string code;
    std::string warning;
    };

  struct OnAdEvent {
      std::string client;
    std::string reason;
    Float type;
    };

  struct OnAdTime {
      Float position;
    Float duration;
    };

  struct OnBuffer {
      
    };

  struct OnTime {
      Float position;
    Float duration;
    };

  struct OnFullScreenRequested {
      
    };

  struct OnFullScreen {
      
    };

  struct OnFullScreenExitRequested {
      
    };

  struct OnFullScreenExit {
      
    };

  struct OnControlBarVisible {
      bool visible;
    };

  struct OnPlaylistComplete {
      
    };

  struct OnPlaylistItemPlaylistItemSources {
      std::string file;
    std::string label;
    bool default;
    };

  struct OnPlaylistItemPlaylistItemAdSchedule {
      std::string tag;
    std::string offset;
    };

  struct OnPlaylistItemPlaylistItemTracks {
      std::string file;
    std::string label;
    bool default;
    };

  struct OnPlaylistItemPlaylistItem {
      std::string file;
    std::vector<OnPlaylistItemPlaylistItemSources> sources;
    std::string image;
    std::string title;
    std::string description;
    std::string mediaId;
    std::vector<OnPlaylistItemPlaylistItemAdSchedule> adSchedule;
    std::string adVmap;
    std::vector<OnPlaylistItemPlaylistItemTracks> tracks;
    std::string recommendations;
    Float startTime;
    bool autostart;
    };

  struct OnPlaylistItem {
      OnPlaylistItemPlaylistItem playlistItem;
    };

  struct OnAudioTracks {
      
    };
  void onPlayerReady(OnPlayerReady value) const;

  void onPlaylist(OnPlaylist value) const;

  void onBeforePlay(OnBeforePlay value) const;

  void onBeforeComplete(OnBeforeComplete value) const;

  void onComplete(OnComplete value) const;

  void onPlay(OnPlay value) const;

  void onPause(OnPause value) const;

  void onSeek(OnSeek value) const;

  void onSeeked(OnSeeked value) const;

  void onRateChanged(OnRateChanged value) const;

  void onSetupPlayerError(OnSetupPlayerError value) const;

  void onPlayerError(OnPlayerError value) const;

  void onPlayerWarning(OnPlayerWarning value) const;

  void onPlayerAdError(OnPlayerAdError value) const;

  void onPlayerAdWarning(OnPlayerAdWarning value) const;

  void onAdEvent(OnAdEvent value) const;

  void onAdTime(OnAdTime value) const;

  void onBuffer(OnBuffer value) const;

  void onTime(OnTime value) const;

  void onFullScreenRequested(OnFullScreenRequested value) const;

  void onFullScreen(OnFullScreen value) const;

  void onFullScreenExitRequested(OnFullScreenExitRequested value) const;

  void onFullScreenExit(OnFullScreenExit value) const;

  void onControlBarVisible(OnControlBarVisible value) const;

  void onPlaylistComplete(OnPlaylistComplete value) const;

  void onPlaylistItem(OnPlaylistItem value) const;

  void onAudioTracks(OnAudioTracks value) const;
};
} // namespace react
} // namespace facebook
